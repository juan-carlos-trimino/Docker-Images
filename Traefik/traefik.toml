# traefik.toml
# Traefik (pronounced "traffic") is a open source reverse proxy/load balancer; it is written in GO.

# Entrypoints definition
[entryPoints]
  [entryPoints.web]
    address = ":80"
  [entryPoints.websecure]
    address = ":443"
  [entryPoints.dashboard]
    address = ":8080"

# Docker configuration backend
[providers.docker]
  # Traefik exposes containers by default. If set to false, containers that don't have a traefik.enable=true label will be
  # ignored from the resulting routing configuration.
  exposedByDefault = false
  # It defines a default Docker network to use for connections to all containers. This option can be overridden on a container
  # basis with the traefik.docker.network label.
  # Run 'docker network ls' to see the actual name.
  network = "nat"
  # It activates the Swarm Mode (instead of standalone Docker).
  swarmMode = false
  #defaultRoute = "dev.local"
  useBindPortIP = true

[api]
  dashboard = false
  insecure = false
  #debug = true




# Let's Encrypt


# Log ERROR-level messages (or more severe) to the console, but silence
# DEBUG-level messages.
##debug = false
##logLevel = "ERROR"

# Traefik will listen for traffic on both HTTP and HTTPS.
###defaultEntryPoints = ["https", "http"]

# Network traffic will be entering the Docker network on the usual web ports (i.e., 80 and 443), where Traefik will be listening.
##[entryPoints]
##  [entryPoints.http]
##    address = ":80"
    # Uncomment the following two lines to redirect HTTP to HTTPS.
    #[entryPoints.http.redirect]
    #  entryPoint = "https"
##  [entryPoints.https]
##    address = ":443"
##    [entryPoints.https.tls]

##[retry]

# These options are for Traefik's integration with Docker.
##[docker]
  # Default base domain used for the frontend rules.
  # Can be overridden by setting the "traefik.domain" label on a container.
#  domain = "dev.local"
  # Enable watch docker changes.
#  watch = true
#  endpoint = "tcp:localhost:80"

#[log]

  # Enable Dashboard (Default: true)
#  dashboard = true
#  entrypoint = "dashboard"


#[ping]


#[frontends]
#  [frontends.finances]
#    backend = "service-msfinances"
#    [frontends.finances.routes.route_1]
#      rule = "Host:finances.dev.local"

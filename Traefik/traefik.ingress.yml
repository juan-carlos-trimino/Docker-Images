apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress
rules:
  - apiGroups: [""]
    verbs: ["get", "list", "watch"]
    resources: ["services", "endpoints", "secrets"]
  - apiGroups: ["extensions"]
    verbs: ["get", "list", "watch"]
    resources: ["ingresses"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress
subjects:
  - kind: ServiceAccount
    name: traefik-ingress
    namespace: kube-system
---
# Controller.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-ingress
  namespace: kube-system
spec:
  replicas: 1
  # Pod selector.
  selector:
    matchExpressions:
      - key: deployment-label
        operator: In
        values:
          - traefik-ingress-controller
  # Pod template.
  template:
    metadata:
      name: traefik-ingress
      # Must macth "Service" and "Deployment" labels.
      labels:
        deployment-label: traefik-ingress-controller
        service-label: traefik-ingress-controller
    spec:
      serviceAccountName: traefik-ingress
      terminationGracePeriodSeconds: 60
      containers:
        - name: traefik-ingress
          imagePullPolicy: IfNotPresent
          #image: traefik:2.4.8
          image: traefik:1.7
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: dashboard
              containerPort: 8080
              protocol: TCP
          args:
            - --api
            - --kubernetes
            - --logLevel=INFO
          #  - --defaultentrypoints=http,https
          #  - --entrypoints=Name:https Address::443 TLS
          #  - --entrypoints=Name:http Address::80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress
  namespace: kube-system
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      #targetPort: 80
      protocol: TCP
    - name: https
      port: 443
      #targetPort: 443
      protocol: TCP
    - name: dashboard
      port: 8080
      #targetPort: 8080
      protocol: TCP
  selector:
    # Pod selector; all Pods with this label will be part of this service.
    service-label: traefik-ingress-controller
    sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard
  namespace: kube-system
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  type: ClusterIP
  ports:
    - name: dashboard
      port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    # Pod selector; all Pods with the service-label=traefik-ingress-label label will be part of this service.
    traefik-ingress-controller-service-label: traefik-ingress-controller-label
    sessionAffinity: None
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-dashboard-ingress
  namespace: kube-system
spec:
  rules:
    - host: trimino.example.com
      http:
        paths:
        - path: /
          backend:
            serviceName: traefik-dashboard
            servicePort: dashboard

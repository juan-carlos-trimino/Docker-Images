apiVersion: v1
kind: Namespace
metadata:
  name: nats-namespace
# YAML files can contain multiple resource definitions separated by a line with three dashes.
---
##########
# Server #
##########
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-server-deployment
  namespace: nats-namespace
spec:
  # Only the current and previous revisions (ReplicaSets) are preserved.
  revisionHistoryLimit: 2
  # The desired number of pod instances.
  replicas: 1
  #stragedy:
  #  rollingUpdate:
      # How many pod instances are allowed to exist above the desired replica count.
  #    maxSurge: 1
      # How many pod instances can be unavailable relative to the desired replica count.
      # A value of 0 makes the deployment replace pods one by one.
  #    maxUnavailable: 1
    # When app does support running multiple versions in parallel.
  #  type: RollingUpdate
    # When app doesn't support running multiple versions in parallel (app becomes completely unavailable
    # for a short period of time).
    #type: Recreate
  # Pod selector.
  selector:
    matchExpressions:
      - key: deployment-label
        operator: In
        values:
          - nats
  # Pod template.
  template:
    metadata:
      name: nats-server-pod
      # Must macth "Service" and "Deployment" labels.
      labels:
        deployment-label: nats
        service-label: nats
    spec:
      containers:
        - name: nats
          imagePullPolicy: IfNotPresent
          image: nats:2.2.2-alpine3.13
          ports:
            - name: client
              containerPort: 4222
              protocol: TCP
            - name: management
              containerPort: 8222
              protocol: TCP
            - name: cluster
              containerPort: 6222
              protocol: TCP
      restartPolicy: Always
---
#############
# Publisher #
#############
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-publisher-deployment
  namespace: nats-namespace
spec:
  # Only the current and previous revisions (ReplicaSets) are preserved.
  revisionHistoryLimit: 2
  # The desired number of pod instances.
  replicas: 1
  #stragedy:
  #  rollingUpdate:
      # How many pod instances are allowed to exist above the desired replica count.
  #    maxSurge: 1
      # How many pod instances can be unavailable relative to the desired replica count.
      # A value of 0 makes the deployment replace pods one by one.
  #    maxUnavailable: 1
    # When app does support running multiple versions in parallel.
  #  type: RollingUpdate
    # When app doesn't support running multiple versions in parallel (app becomes completely unavailable
    # for a short period of time).
    #type: Recreate
  # Pod selector.
  selector:
    matchExpressions:
      - key: deployment-label
        operator: In
        values:
          - nats
  # Pod template.
  template:
    metadata:
      #name: nats-publisher-pod
      # Must macth "Service" and "Deployment" labels.
      labels:
        deployment-label: nats
        service-label: nats
    spec:
      containers:
        - name: nats-publisher
          imagePullPolicy: IfNotPresent
          image: veni-vidi-vici/nats-publisher-1.0.0:5.0.202-alpine3.13-amd64
---
##############
# Subscriber #
##############
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-subscriber-deployment
  namespace: nats-namespace
spec:
  # Only the current and previous revisions (ReplicaSets) are preserved.
  revisionHistoryLimit: 2
  # The desired number of pod instances.
  replicas: 2
  #stragedy:
  #  rollingUpdate:
      # How many pod instances are allowed to exist above the desired replica count.
  #    maxSurge: 1
      # How many pod instances can be unavailable relative to the desired replica count.
      # A value of 0 makes the deployment replace pods one by one.
  #    maxUnavailable: 1
    # When app does support running multiple versions in parallel.
  #  type: RollingUpdate
    # When app doesn't support running multiple versions in parallel (app becomes completely unavailable
    # for a short period of time).
    #type: Recreate
  # Pod selector.
  selector:
    matchExpressions:
      - key: deployment-label
        operator: In
        values:
          - nats
  # Pod template.
  template:
    metadata:
      # Must macth "Service" and "Deployment" labels.
      labels:
        deployment-label: nats
        service-label: nats
    spec:
      containers:
        - name: nats-subscriber
          imagePullPolicy: IfNotPresent
          image: veni-vidi-vici/nats-subscriber-1.0.0:5.0.202-alpine3.13-amd64
---
apiVersion: v1
kind: Service
metadata:
  name: nats-service
spec:
  type: ClusterIP
  ports:
    - name: nats-server
      protocol: TCP
      port: 4222
      targetPort: 4222
    - name: nats-management
      protocol: TCP
      port: 8222
      targetPort: 8222
    - name: nats-cluster
      protocol: TCP
      port: 6222
      targetPort: 6222
  selector:
    # Pod selector; all Pods with the service-label=nats label will be part of this service.
    service-label: nats
    sessionAffinity: None
